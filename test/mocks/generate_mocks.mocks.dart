// Mocks generated by Mockito 5.0.17 from annotations
// in memo_sample/test/mocks/generate_mocks.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;

import 'package:cloud_firestore/cloud_firestore.dart' as _i3;
import 'package:firebase_auth/firebase_auth.dart' as _i9;
import 'package:hooks_riverpod/hooks_riverpod.dart' as _i4;
import 'package:memo_sample/infrastructure/model/memo.dart' as _i2;
import 'package:memo_sample/infrastructure/repository/memo_repository.dart'
    as _i6;
import 'package:memo_sample/presentation/controller/auth_controller/auth_controller.dart'
    as _i5;
import 'package:memo_sample/presentation/controller/memo_controller/memo_controller.dart'
    as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeDateTime_0 extends _i1.Fake implements DateTime {}

class _Fake$MemoCopyWith_1<$Res> extends _i1.Fake
    implements _i2.$MemoCopyWith<$Res> {}

class _FakeMemo_2 extends _i1.Fake implements _i2.Memo {}

class _FakeDocumentReference_3<T extends Object?> extends _i1.Fake
    implements _i3.DocumentReference<T> {}

class _FakeAsyncValue_4<T> extends _i1.Fake implements _i4.AsyncValue<T> {}

class _Fake$AuthStateCopyWith_5<$Res> extends _i1.Fake
    implements _i5.$AuthStateCopyWith<$Res> {}

/// A class which mocks [Memo].
///
/// See the documentation for Mockito's code generation for more information.
class MockMemo extends _i1.Mock implements _i2.Memo {
  MockMemo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id =>
      (super.noSuchMethod(Invocation.getter(#id), returnValue: '') as String);
  @override
  String get title =>
      (super.noSuchMethod(Invocation.getter(#title), returnValue: '')
          as String);
  @override
  String get text =>
      (super.noSuchMethod(Invocation.getter(#text), returnValue: '') as String);
  @override
  DateTime get createdAt => (super.noSuchMethod(Invocation.getter(#createdAt),
      returnValue: _FakeDateTime_0()) as DateTime);
  @override
  DateTime get updatedAt => (super.noSuchMethod(Invocation.getter(#updatedAt),
      returnValue: _FakeDateTime_0()) as DateTime);
  @override
  _i2.$MemoCopyWith<_i2.Memo> get copyWith =>
      (super.noSuchMethod(Invocation.getter(#copyWith),
              returnValue: _Fake$MemoCopyWith_1<_i2.Memo>())
          as _i2.$MemoCopyWith<_i2.Memo>);
  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(Invocation.method(#toJson, []),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
}

/// A class which mocks [MemoRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMemoRepository extends _i1.Mock implements _i6.MemoRepository {
  MockMemoRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.Memo> fetchMemo({String? userId, String? memoId}) =>
      (super.noSuchMethod(
          Invocation.method(#fetchMemo, [], {#userId: userId, #memoId: memoId}),
          returnValue:
              Future<_i2.Memo>.value(_FakeMemo_2())) as _i7.Future<_i2.Memo>);
  @override
  _i7.Future<_i3.DocumentReference<Object?>> add(
          {String? userId, String? title, String? text}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #add, [], {#userId: userId, #title: title, #text: text}),
              returnValue: Future<_i3.DocumentReference<Object?>>.value(
                  _FakeDocumentReference_3<Object?>()))
          as _i7.Future<_i3.DocumentReference<Object?>>);
  @override
  _i7.Future<void> update(
          {String? userId, String? memoId, String? title, String? text}) =>
      (super.noSuchMethod(
          Invocation.method(#update, [],
              {#userId: userId, #memoId: memoId, #title: title, #text: text}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> delete({String? userId, String? memoId}) =>
      (super.noSuchMethod(
          Invocation.method(#delete, [], {#userId: userId, #memoId: memoId}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
}

/// A class which mocks [MemoController].
///
/// See the documentation for Mockito's code generation for more information.
class MockMemoController extends _i1.Mock implements _i8.MemoController {
  MockMemoController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<String?> add({String? title, String? text}) => (super.noSuchMethod(
      Invocation.method(#add, [], {#title: title, #text: text}),
      returnValue: Future<String?>.value()) as _i7.Future<String?>);
  @override
  _i7.Future<void> update({String? memoId, String? title, String? text}) =>
      (super.noSuchMethod(
          Invocation.method(
              #update, [], {#memoId: memoId, #title: title, #text: text}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> delete({String? memoId}) =>
      (super.noSuchMethod(Invocation.method(#delete, [], {#memoId: memoId}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
}

/// A class which mocks [AuthState].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthState extends _i1.Mock implements _i5.AuthState {
  MockAuthState() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get hasAlreadySignedIn =>
      (super.noSuchMethod(Invocation.getter(#hasAlreadySignedIn),
          returnValue: false) as bool);
  @override
  _i4.AsyncValue<_i9.User?> get firebaseUser =>
      (super.noSuchMethod(Invocation.getter(#firebaseUser),
              returnValue: _FakeAsyncValue_4<_i9.User?>())
          as _i4.AsyncValue<_i9.User?>);
  @override
  _i5.$AuthStateCopyWith<_i5.AuthState> get copyWith =>
      (super.noSuchMethod(Invocation.getter(#copyWith),
              returnValue: _Fake$AuthStateCopyWith_5<_i5.AuthState>())
          as _i5.$AuthStateCopyWith<_i5.AuthState>);
}
